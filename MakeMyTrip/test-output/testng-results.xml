<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-24T13:04:13Z" name="Default suite" finished-at="2023-07-24T13:05:23Z" duration-ms="69615">
    <groups>
    </groups>
    <test started-at="2023-07-24T13:04:13Z" name="Default test" finished-at="2023-07-24T13:05:23Z" duration-ms="69615">
      <class name="com.makemytrip.testLayer.MakeMyTripTest1">
        <test-method is-config="true" signature="initializeBrowser()[pri:0, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:04:13Z" name="initializeBrowser" finished-at="2023-07-24T13:04:22Z" duration-ms="8807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="PopUp()[pri:1, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:04:22Z" name="PopUp" finished-at="2023-07-24T13:04:42Z" duration-ms="20211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PopUp -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:04:22Z" name="beforemethod" finished-at="2023-07-24T13:04:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:04:42Z" name="afterMethod" finished-at="2023-07-24T13:04:42Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PopUp status=SUCCESS method=MakeMyTripTest1.PopUp()[pri:1, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:04:42Z" name="beforemethod" finished-at="2023-07-24T13:04:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Flex()[pri:2, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:04:42Z" name="Flex" finished-at="2023-07-24T13:05:02Z" duration-ms="20101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Flex -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:05:02Z" name="afterMethod" finished-at="2023-07-24T13:05:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Flex status=SUCCESS method=MakeMyTripTest1.Flex()[pri:2, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="LogoImageTest()[pri:3, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:05:02Z" name="LogoImageTest" finished-at="2023-07-24T13:05:22Z" duration-ms="20060" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='mmtLogo makeFlex']"}
  (Session info: chrome=113.0.5672.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'RKAINS007', ip: '192.168.55.234', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.93, chrome: {chromedriverVersion: 113.0.5672.24 (65f30d4e8051..., userDataDir: C:\Users\ramko\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50970}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2ca8e12202f7a4bde2de57ad06ce72e9
*** Element info: {Using=xpath, value=//a[@class='mmtLogo makeFlex']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='mmtLogo makeFlex']"}
  (Session info: chrome=113.0.5672.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'RKAINS007', ip: '192.168.55.234', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.93, chrome: {chromedriverVersion: 113.0.5672.24 (65f30d4e8051..., userDataDir: C:\Users\ramko\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50970}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2ca8e12202f7a4bde2de57ad06ce72e9
*** Element info: {Using=xpath, value=//a[@class='mmtLogo makeFlex']}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy14.isDisplayed(Unknown Source)
at com.makemytrip.pagelayer.Homepage.validateLogo(Homepage.java:68)
at com.makemytrip.testLayer.MakeMyTripTest1.LogoImageTest(MakeMyTripTest1.java:43)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogoImageTest -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:05:02Z" name="beforemethod" finished-at="2023-07-24T13:05:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:05:22Z" name="afterMethod" finished-at="2023-07-24T13:05:23Z" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogoImageTest status=FAILURE method=MakeMyTripTest1.LogoImageTest()[pri:3, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.makemytrip.testLayer.MakeMyTripTest1@15888343]" started-at="2023-07-24T13:05:23Z" name="tearDown" finished-at="2023-07-24T13:05:23Z" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.makemytrip.testLayer.MakeMyTripTest1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
